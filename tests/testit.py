import collections
from konlpy.tag import Twitter
from konlpy.utils import pprint


a1 = collections.Counter(['1', '2', '3', '4', '3', '3', '1',3])
a2 = collections.Counter(['1', '1', '3', '2', '3'])

a3 = a1 | a2

print(a3)
print(a3['5'])
twt = Twitter()

word = ('알리바바와 40인의 도굴꾼 지하에서 웃는다 독도는 우리땅 우리땅 땅요 땅요 내 땅이요 조선 땅도 내땅이요')

tes = twt.pos(word)
pprint(tes)

offsets = set(i for i in range(len(word)) if word.startswith('땅', i))

print(offsets)
print(word[3])



"""
짚고 넘어갈 것

1. 형태소 분석기는 완벽하지 못하다.
2. 기사문은 일반 글과 달리 지킬 건 지킨다 : 띄어쓰기 및 오타가 많지 않은 편. 즉 문법적인 이해 요소가 헷갈릴 일이 거의 없다.
3. 기사문에는 일반 문법을 벗어나는 것이라면 보통 명사의 지나친 나열이 있다.
4. 트위터 분석기엔 대명사 판별기가 없기 때문에, 정황을 파악해서 필요한 경우 직접 파악해줘야 한다.
5. 기사문엔 대명사 말고도 줄임말 (ex: 문재인 대통령 >> 문 대통령) 으로 많이 쓰인다
6. 형태소 분석기들은 띄어쓰기를 믿지 않는 경향이 있다. 띄어쓰기 여부를 직접 입력해 주도록 하자.
7. 띄어쓰기를 해결한다 하더라도 동일의미 (문재인 == 문 대통령)의 문제가 있다. 현재 빅카인즈에도 문제인 부분. 이 부분을 제대로 해야 키워드 분석의 참의미가 높아질 것.

대명사 ['그', '그녀', '그것']
    대부분 이전 문장의 인물형 명사에서 비롯하지만, 단정지을 수는 없다 : 즉 지워야 하는 부분...?

의존명사 ['것', '수', '뿐', '만큼', '바', '지', '이']
    일 것이다
    수 밖에 없다.
    할 뿐이다.
    한 만큼 열심히 해라
    했던 바 이렇게 판단했다.
    한 지 얼마 되지 않았다.
    했던 이 몇이나 된다고

관형사 ['그', '이', '저']
    그 사람 나만 볼 수 있어요
    이 제품으로 말할 것 같으면
    저 푸른 초원 위에

새 원칙
1. 트위터 형태소 분석기를 원칙으로 하되, 띄어쓰기 예외 처리를 반드시 실행한다.
2. 띄어쓰기 처리가 되어 있을 경우에도 명사 나열이 있다면 특이점으로 기록해 두며, 이것을 사전 저장한다(12월 초 회의 내용)
3. 띄어쓰기 이후 명사 나열에 대명사/의존명사/일반관형사 등은 특이한 명사로 기록하지는 않는다. (예 : 배성재 아나운서 그의 인기 >> '배성재 아나운서 그'로 저장은 시도조차 하지 않을 것)
4. '' 안은 작은 인용문의 경우가 아니면 모두 명사형으로 끝남을 예상한다.

프로그램 프로세스

일정 시간마다
1. getArticleList.py
2. getArticle.py
3. 요약 및 데이터 처리(summ.py)
4. '의심 명사' 유효성 검토, 새 단어 저장(newword.py)
5. 키워드 관리 및 저장(w2v.py)
"""
